---
swagger: '2.0'

info:
  description: 'This is a sample GAIUS NETWORKS api Documentaion. For this sample, you can use the api key `special-key`
    to test the authorization filters.'
  version: 1.0.0
  title: GAIUS Networks api docs
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

host: india.gaiusnetworks.com/
basePath: "test"

schemes:
- https

tags:
- name: Candidate
  description: Every flipped candidate api  

- name: Recruiter
  description: Every flipped recruiter api

- name: HR
  description: Every flipped internal HR api


paths:
  "/flippedNewSignup.py":
    post:
      tags:
      - Candidate
      summary: Candidate login
      description: login via email and password
      operationId: candidateLogin
      consumes:
      - multipart/form-data
      produces:
      - application/json

      parameters:
      - name: req
        in: formData
        description: "loginNow"
        required: true
        type: string
      - name: email
        in: formData
        description: email of the candidate
        required: true
        type: string
      - name: password
        in: formData
        description: password of the candidate
        required: true
        type: string
        
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"


  "/flippedlogin.py/1":
    post:
      tags:
      - Candidate
      summary: Candidate SignUp
      description: SignUp via email and password
      operationId: CandidateSignUp
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "loginNow"
        required: true
        type: string
      - name: First name
        in: formData
        description: first name of the Candidate
        required: true
        type: string
      - name: last name
        in: formData
        description: Last name of the Candidate
        required: true
        type: string  
      - name: email
        in: formData
        description: email of the Recruiter
        required: true
        type: string   
      - name: phone
        in: formData
        description: phone of the candidate
        required: true
        type: string
      - name: Choose your CV
        in: formData
        description: Cv of the candidate
        required: true
        type: file        
     
          
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"

  "flippedLogin.py":
    post:
      tags:
      - Candidate
      summary: Candidate Jobs
      description: Get initial Jobs
      operationId: CandidateJobs
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "jdlistAll"
        required: true
        type: string
      - name: User ID
        in: formData
        description: User Id of the candidate
        required: true
        type: string
      - name: condition
        in: formData
        description: init
        required: true
        type: string  
          
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200" 

  "/flippedLogin.py/2":
    post:
      tags:
      - Candidate
      summary: Candidate more Jobs
      description: Get more Jobs
      operationId: CandidatemoreJobs
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "jdlistAll"
        required: true
        type: string
      - name: User ID
        in: formData
        description: User Id of the candidate
        required: true
        type: string
      - name: condition
        in: formData
        description: init
        required: true
        type: string  
          
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200" 

  "flippedNewSignup.py":
    post:
      tags:
      - Candidate
      summary: Candidate Filter Jobs
      description: Get more Jobs
      operationId: CandidatemoreJobs
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "filterjdlistAll"
        required: true
        type: string
      - name: filter
        in: formData
        description: filter by category
        required: true
        type: string
      - name: condition
        in: formData
        description: init
        required: true
        type: string  
          
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200" 

  "flippedCandidate.py":
    post:
      tags:
      - Candidate
      summary: Candidate Applied Jobs
      description: Get Applied Jobs
      operationId: CandidateappliedJobs
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "getUpskillStatus"
        required: true
        type: string
      - name: userID
        in: formData
        description: Candidate userID
        required: true
        type: string 
          
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"

  "/listCourses.py":
    post:
      tags:
      - Candidate
      summary: Candidate upskilling Courses
      description: Get Upskilling Courses
      operationId: CandidateupskiilingCourses
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: myown
        in: formData
        description: "1"
        required: true
        type: string
      - name: userID
        in: formData
        description: Candidate userID
        required: true
        type: string 
          
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"

  "/listCourses.py/CourselistnyName":
    post:
      tags:
      - Candidate
      summary: Candidate upskilling Courses By Name
      description: Get Upskilling Courses By Name
      operationId: CandidateupskiilingCoursesbyName
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: myown
        in: formData
        description: "1"
        required: true
        type: string
      - name: userID
        in: formData
        description: Candidate userID
        required: true
        type: string
      - name: Id
        in: formData
        description: Last ID of the candidate
        required: true
        type: string   
          
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200" 


  "/listCourses.py/courselistnyPrice":
    post:
      tags:
      - Candidate
      summary: Candidate upskilling Courses according to price
      description: Get Upskilling Courses according to price
      operationId: CandidateupskiilingCoursesaccordingtoprice
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: myown
        in: formData
        description: "1"
        required: true
        type: string
      - name: userID
        in: formData
        description: Candidate userID
        required: true
        type: string
      - name: Id
        in: formData
        description: Last ID of the candidate
        required: true
        type: string   
      - name: sortByPrice
        in: formData
        description: Sort course by price
        required: true
        type: string 
      - name: sortType
        in: formData
        description: Sort course by Filter
        required: true
        type: string      
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"                                        

  "flippedNewSignup.py/assess":
    post:
      tags:
      - Candidate
      summary: Candidate Assesment dashboard
      description: Candidate Job preference update
      operationId: candidatejobPref
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "updateCVSkillset"
        required: true
        type: string
      - name: userID
        in: formData
        description: userID of the the candidate
        required: true
        type: string
      - name: cvSkills
        in: formData
        description: cvSkills is comma seperated
        required: true
        type: string  
          
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"                                        

  "/flippedNewSignup.py/1":
    post:
      tags:
      - HR
      summary: HR Login
      description: Login via email and password
      operationId: InternalHrLogin
      consumes:
      - multipart/form-data
      produces:
      - application/json

      parameters:
      - name: req
        in: formData
        description: "loginNow"
        required: true
        type: string
      - name: email
        in: formData
        description: email of the Recruiter
        required: true
        type: string
      - name: password
        in: formData
        description: password of the candidate
        required: true
        type: string
          
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400" 
  "/flippedLogin.py/login":
    post:
      tags:
      - Recruiter
      summary: Recruiter login
      description: login via email and password
      operationId: RecruiterLogin
      consumes:
      - multipart/form-data
      produces:
      - application/json

      parameters:
      - name: req
        in: formData
        description: "loginNow"
        required: true
        type: string
      - name: email
        in: formData
        description: email of the Recruiter
        required: true
        type: string
      - name: password
        in: formData
        description: password of the candidate
        required: true
        type: string
          
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400" 

  "/flippedlogin.py/recruiterSignUp":
    post:
      tags:
      - Recruiter
      summary: Recruiter SignUp
      description: Recruiter SignUp
      operationId: RecruiterSignUp
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "sendOTP"
        required: true
        type: string
      - name: name
        in: formData
        description: first + Last name of Recruiter
        required: true
        type: string
      - name: email
        in: formData
        description: email of the Recruiter
        required: true
        type: string   
      - name: password
        in: formData
        description: password of the Recruiter
        required: true
        type: string         
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"

  "/flippedlogin.py/companyregis":
    post:
      tags:
      - Recruiter
      summary: Company registraion 
      description: Company registraion 
      operationId: companyRegistraion 
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "companyregis"
        required: true
        type: string
      - name: compname                                                        
        in: formData
        description: Company Name
        required: true
        type: string
      - name: userID
        in: formData
        description: userID of the Recruiter
        required: true
        type: string   
      - name: name
        in: formData
        description: name of the Recruiter
        required: true
        type: string 
      - name: email
        in: formData
        description: email of the Recruiter
        required: true
        type: string 
      - name: designation
        in: formData
        description: designation of the Recruiter
        required: true
        type: string
      - name: contact
        in: formData
        description: contact number of the Recruiter
        required: true
        type: string 
      - name: industry
        in: formData
        description: company belongs to which type of industry
        required: true
        type: string
      - name: url
        in: formData
        description: website of the organisation
        required: true
        type: string
      - name: about
        in: formData
        description: about organisation
        required: true
        type: string
      - name: loc
        in: formData
        description: location of the organisation
        required: true
        type: string 
      - name: orgSize
        in: formData
        description: size of the organisation
        required: true
        type: string
      - name: submission
        in: formData
        description: logo of the organisation
        required: true
        type: string               

      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"          

  "/flippedLogin.py/jobpost":
    post:
      tags:
      - Recruiter
      summary: jobPost
      description: Job post
      operationId: jobPosts
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "jdadd"
        required: true
        type: string
      - name: userID
        in: formData
        description: request.session['userID']
        required: true
        type: string 
      - name: name
        in: formData
        description: jobRole
        required: true
        type: string 
      - name: designation
        in: formData
        description: jobDescription
        required: true
        type: string 
      - name: nop
        in: formData
        description: jobNop
        required: true
        type: string 
      - name: ctc
        in: formData
        description: minsal
        required: true
        type: string 
      - name: maxCTC
        in: formData
        description: maxsal
        required: true
        type: string 
      - name: ctcRange
        in: formData
        description: jobSalaryTime
        required: true
        type: string 
      - name: loc
        in: formData
        description: jobLoc
        required: true
        type: string
      - name: approved
        in: formData
        description: approved
        required: true
        type: string 
      - name: kick
        in: formData
        description: jobKick
        required: true
        type: string 
      - name: jobType
        in: formData
        description: jobType
        required: true
        type: string 
      - name: jobFilter
        in: formData
        description: jobFilter[:-1]
        required: true
        type: string
      - name: experience
        in: formData
        description: exp
        required: true
        type: string 
      - name: skillSet
        in: formData
        description: skillSet
        required: true
        type: string 
      - name: addskills
        in: formData
        description: addmandatoryskills
        required: true
        type: string 
      - name: bucket_skills
        in: formData
        description: jobfiltersubtype
        required: true
        type: string                              
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"
            
  "/flippedAssessmentV3.py/quiz":
    post:
      tags:
      - Recruiter
      summary: manual Assessment
      description: manual Assessment
      operationId: ui/uxQuiz
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "updateUI/UXass"
        required: true
        type: string
      - name: skillID
        in: formData
        description: SSKID024
        required: true
        type: string
      - name: testName
        in: formData
        description: File based Submission
        required: true
        type: string
      - name: jobID
        in: formData
        description: jobID
        required: true
        type: string
      - name: content
        in: formData
        description: ExtraAssessmentinput
        required: true
        type: string
      - name: isassess == on
        in: formData
        description: assessment is assigned
        required: true
        type: string
      - name: isassess == ''
        in: formData
        description: assessment is empty
        required: true
        type: string    
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"

  "/flippedNotif.py/notif":
    post:
      tags:
      - Recruiter
      summary: Notification 
      description: Notification  
      operationId: companyNotification 
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "addNotif"
        required: true
        type: string
      - name: userID                                                        
        in: formData
        description: userID
        required: true
        type: string
      - name: type
        in: formData
        description: type0
        required: true
        type: string   
      - name: text
        in: formData
        description: Your Job has been successfully posted!
        required: true
        type: string 
      - name: redirect
        in: formData
        description: /flipped/companyjoblist/
        required: true
        type: string 
      - name: avatar
        in: formData
        description: ssdd
        required: true
        type: string              

      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400" 

  "/flippedNotif.py/email":
    post:
      tags:
      - Recruiter
      summary: Company email Sending
      description: Company email Sending
      operationId: companyemailsending
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "addEmail"
        required: true
        type: string
      - name: templateID                                                        
        in: formData
        description: template 11
        required: true
        type: string
      - name: text
        in: formData
        description: { "to": "'+ request.session['email'] +'", "name": "'+ request.session['name'] +'"}
        required: true
        type: string   
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"

  "/flippedNewSignup.py/sampleQuest":
    post:
      tags:
      - Recruiter
      summary: Sample Questions
      description: Sample Questions 
      operationId: sampleQuest 
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "demoQuestions"
        required: true
        type: string
      - name: skillIDs                                                        
        in: formData
        description: skill
        required: true
        type: string

      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"
            
  "/flippedLogin.py/updateProfile":
    post:
      tags:
      - Recruiter
      summary: Company registraion 
      description: Company registraion 
      operationId: companyRegistraion 
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "companyregis"
        required: true
        type: string
      - name: compname                                                        
        in: formData
        description: org-name
        required: true
        type: string
      - name: userID                                                        
        in: formData
        description: userID
        required: true
        type: string
      - name: name                                                        
        in: formData
        description: f-name
        required: true
        type: string
      - name: email                                                        
        in: formData
        description: email
        required: true
        type: string
      - name: designation                                                        
        in: formData
        description: designation
        required: true
        type: string
      - name: contact                                                        
        in: formData
        description: contact number
        required: true
        type: string
      - name: industry                                                        
        in: formData
        description: type of industry
        required: true
        type: string
      - name: loc                                                       
        in: formData
        description: job location
        required: true
        type: string
      - name: url                                                        
        in: formData
        description: company url
        required: true
        type: string
      - name: about                                                        
        in: formData
        description: company description
        required: true
        type: string
      - name: url                                                        
        in: formData
        description: company url
        required: true
        type: string
      - name: orgSize                                                        
        in: formData
        description: organization Size
        required: true
        type: string
      - name: submission                                                        
        in: formData
        description: company profile image
        required: true
        type: string                
         
      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"

  "/flippedRecruiter.py/deleteAccount":
    post:
      tags:
      - Recruiter
      summary: Company registraion 
      description: Company registraion 
      operationId: companyRegistraion 
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "delRecruiterAccount"
        required: true
        type: string
      - name: userID                                                        
        in: formData
        description: userID
        required: true
        type: string

      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"



  "/flippedRecruiter.py/closeJob":
    post:
      tags:
      - Recruiter
      summary: Company registraion 
      description: Company registraion 
      operationId: companyRegistraion 
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "closeJobID"
        required: true
        type: string
      - name: jobID                                                        
        in: formData
        description: jobID
        required: true
        type: string

      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400" 

  "/flippedLogin.py/jdlist":
    post:
      tags:
      - Recruiter
      summary: Company registraion 
      description: Company registraion 
      operationId: companyRegistraion 
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "jdlist"
        required: true
        type: string
      - name: userID                                                        
        in: formData
        description: userID
        required: true
        type: string

      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"


  "/flippedLogin.py/companyregisCheck":
    post:
      tags:
      - Recruiter
      summary: Company registraion check 
      description: Company registraion check 
      operationId: companyRegistraionCheck
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "compregischeck"
        required: true
        type: string
      - name: userID                                                        
        in: formData
        description: userID
        required: true
        type: string

      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"

  "/flippedRecruiter.py/dashboardNotif":
    post:
      tags:
      - Recruiter
      summary: Custom Notification
      description: Custom Notification check 
      operationId: customnotificationCheck
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "dynamicNotif"
        required: true
        type: string
      - name: userID                                                        
        in: formData
        description: userID
        required: true
        type: string

      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"

  "/flippedLogin.py/lastActive":
    post:
      tags:
      - Recruiter
      summary: Recuiter last active
      description: Recuiter last active
      operationId: Recuiterlastactive
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "updateLastActivity"
        required: true
        type: string
      - name: userID                                                        
        in: formData
        description: userID
        required: true
        type: string

      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"

  "/flippedRDashboard.py/candidateStats":
    post:
      tags:
      - Recruiter
      summary: stats of candidate status
      description: stats of candidate status 
      operationId: statsofcandidatestatus
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "getDashDetails"
        required: true
        type: string
      - name: userID                                                        
        in: formData
        description: userID
        required: true
        type: string

      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400" 


  "/flippedRecruiter.py/getCandidateDashboard":
    post:
      tags:
      - Recruiter
      summary: get candidate dashboard
      description: Candidate Dashboard
      operationId: candidateDashboard
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "getCandidateDashboard"
        required: true
        type: string
      - name: userID                                                        
        in: formData
        description: userID
        required: true
        type: string

      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"                             


  "/flippedRecruiter.py/calendarbyDate":
    post:
      tags:
      - Recruiter
      summary: Calendar by date
      description: Calendar by date 
      operationId: Calendarbydate
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "recruitersCalaenderByDate"
        required: true
        type: string
      - name: userID                                                        
        in: formData
        description: userID
        required: true
        type: string
      - name: date                                                        
        in: formData
        description: date
        required: true
        type: string  

      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"

  "/flippedRecruiter.py/customNotif":
    post:
      tags:
      - Recruiter
      summary: Dashboard Notification
      description: Dashboard Notification check 
      operationId: DashboardNotificationCheck
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: req
        in: formData
        description: "dashboardNotification"
        required: true
        type: string
      - name: userID                                                        
        in: formData
        description: userID
        required: true
        type: string

      responses:
        '200':
          description: password correct
          schema:
            "$ref": "#/definitions/candidateLogin200"
        '400':
          description: password incorrect
          schema:
            "$ref": "#/definitions/candidateLogin400"                                                       
  
  "/pet":
    post:
      tags:
      - pet
      summary: Add a new pet to the store
      description: ''
      operationId: addPet
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Pet object that needs to be added to the store
        required: true
        schema:
          "$ref": "#/definitions/Pet"
      responses:
        '405':
          description: Invalid input
      security:
      - petstore_auth:
        - write:pets
        - read:pets
    put:
      tags:
      - pet
      summary: Update an existing pet
      description: ''
      operationId: updatePet
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Pet object that needs to be added to the store
        required: true
        schema:
          "$ref": "#/definitions/Pet"
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      security:
      - petstore_auth:
        - write:pets
        - read:pets
  "/pet/findByStatus":
    get:
      tags:
      - pet
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      produces:
      - application/json
      - application/xml
      parameters:
      - name: status
        in: query
        description: Status values that need to be considered for filter
        required: true
        type: array
        items:
          type: string
          enum:
          - available
          - pending
          - sold
          default: available
        collectionFormat: multi
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/Pet"
        '400':
          description: Invalid status value
      security:
      - petstore_auth:
        - write:pets
        - read:pets
  "/pet/findByTags":
    get:
      tags:
      - pet
      summary: Finds Pets by tags
      description: Multiple tags can be provided with comma separated strings. Use
        tag1, tag2, tag3 for testing.
      operationId: findPetsByTags
      produces:
      - application/json
      - application/xml
      parameters:
      - name: tags
        in: query
        description: Tags to filter by
        required: true
        type: array
        items:
          type: string
        collectionFormat: multi
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              "$ref": "#/definitions/Pet"
        '400':
          description: Invalid tag value
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      deprecated: true
  "/pet/{petId}":
    get:
      tags:
      - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: petId
        in: path
        description: ID of pet to return
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/Pet"
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
      - api_key: []
    post:
      tags:
      - pet
      summary: Updates a pet in the store with form data
      description: ''
      operationId: updatePetWithForm
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      - application/xml
      parameters:
      - name: petId
        in: path
        description: ID of pet that needs to be updated
        required: true
        type: integer
        format: int64
      - name: name
        in: formData
        description: Updated name of the pet
        required: false
        type: string
      - name: status
        in: formData
        description: Updated status of the pet
        required: false
        type: string
      responses:
        '405':
          description: Invalid input
      security:
      - petstore_auth:
        - write:pets
        - read:pets
    delete:
      tags:
      - pet
      summary: Deletes a pet
      description: ''
      operationId: deletePet
      produces:
      - application/json
      - application/xml
      parameters:
      - name: api_key
        in: header
        required: false
        type: string
      - name: petId
        in: path
        description: Pet id to delete
        required: true
        type: integer
        format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
      - petstore_auth:
        - write:pets
        - read:pets
  "/store/order":
    post:
      tags:
      - store
      summary: Place an order for a pet
      description: ''
      operationId: placeOrder
      consumes:
      - application/json
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: order placed for purchasing the pet
        required: true
        schema:
          "$ref": "#/definitions/Order"
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/Order"
        '400':
          description: Invalid Order
  "/store/order/{orderId}":
    get:
      tags:
      - store
      summary: Find purchase order by ID
      description: For valid response try integer IDs with value >= 1 and <= 10. Other
        values will generated exceptions
      operationId: getOrderById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: orderId
        in: path
        description: ID of pet that needs to be fetched
        required: true
        type: integer
        maximum: 10
        minimum: 1
        format: int64
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/Order"
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
    delete:
      tags:
      - store
      summary: Delete purchase order by ID
      description: For valid response try integer IDs with positive integer value.
        Negative or non-integer values will generate API errors
      operationId: deleteOrder
      produces:
      - application/json
      - application/xml
      parameters:
      - name: orderId
        in: path
        description: ID of the order that needs to be deleted
        required: true
        type: integer
        minimum: 1
        format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
  "/store/inventory":
    get:
      tags:
      - store
      summary: Returns pet inventories by status
      description: Returns a map of status codes to quantities
      operationId: getInventory
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            additionalProperties:
              type: integer
              format: int32
      security:
      - api_key: []
  "/user/createWithArray":
    post:
      tags:
      - user
      summary: Creates list of users with given input array
      description: ''
      operationId: createUsersWithArrayInput
      consumes:
      - application/json
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: List of user object
        required: true
        schema:
          type: array
          items:
            "$ref": "#/definitions/User"
      responses:
        default:
          description: successful operation
  "/user/createWithList":
    post:
      tags:
      - user
      summary: Creates list of users with given input array
      description: ''
      operationId: createUsersWithListInput
      consumes:
      - application/json
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: List of user object
        required: true
        schema:
          type: array
          items:
            "$ref": "#/definitions/User"
      responses:
        default:
          description: successful operation
  "/user/{username}":
    get:
      tags:
      - user
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: path
        description: 'The name that needs to be fetched. Use user1 for testing. '
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/User"
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
      - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      consumes:
      - application/json
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: path
        description: name that need to be updated
        required: true
        type: string
      - in: body
        name: body
        description: Updated user object
        required: true
        schema:
          "$ref": "#/definitions/User"
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  "/user/login":
    get:
      tags:
      - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
          schema:
            type: string
        '400':
          description: Invalid username/password supplied
  "/user/logout":
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
      - application/json
      - application/xml
      parameters: []
      responses:
        default:
          description: successful operation
  "/user":
    post:
      tags:
      - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      consumes:
      - application/json
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Created user object
        required: true
        schema:
          "$ref": "#/definitions/User"
      responses:
        default:
          description: successful operation

securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
  petstore_auth:
    type: oauth2
    authorizationUrl: https://petstore.swagger.io/oauth/authorize
    flow: implicit
    scopes:
      read:pets: read your pets
      write:pets: modify pets in your account

definitions:
  candidateLogin200:
    type: object
    properties:
      status:
        type: string
        example: "0"
        description: status value for error handling
      token:
        type: string
        example: "9aa735e386"
        description: token ID of candidate
      userID:
        type: string
        example: "3df40bfde7c57b8a58047e8"
        description: User ID of candidate 
      response:
        type: boolean
        example: true
        description: password match response
  candidateLogin400:
    type: object
    properties:
      status:
        type: string
        example: "1"
        description: status value for error handling
      isGoogle:
        type: boolean
        example: false
        description: candidate signup from google status 
      userID:
        type: string
        example: "3df40bfde7c57b8a58047e8"
        description: User ID of candidate 
      response:
        type: boolean
        example: false
        description: password match response
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Category
  Pet:
    type: object
    required:
    - name
    - photoUrls
    properties:
      id:
        type: integer
        format: int64
      category:
        "$ref": "#/definitions/Category"
      name:
        type: string
        example: doggie
      photoUrls:
        type: array
        xml:
          wrapped: true
        items:
          type: string
          xml:
            name: photoUrl
      tags:
        type: array
        xml:
          wrapped: true
        items:
          xml:
            name: tag
          "$ref": "#/definitions/Tag"
      status:
        type: string
        description: pet status in the store
        enum:
        - available
        - pending
        - sold
    xml:
      name: Pet
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Tag
  Order:
    type: object
    properties:
      id:
        type: integer
        format: int64
      petId:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int32
      shipDate:
        type: string
        format: date-time
      status:
        type: string
        description: Order Status
        enum:
        - placed
        - approved
        - delivered
      complete:
        type: boolean
    xml:
      name: Order
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User